version: 2.1
orbs:
    # orgs contain basc recipes and reproducible actions (install node, aws, etc.)
    node: circleci/node@4.1.0
    eb: circleci/aws-elastic-beanstalk@2.0.1
    aws-cli: circleci/aws-cli@1.3.1
    # different jobs are calles later in the workflows sections
jobs:
  build:
    docker:
      # the base image can run most needed actions with orbs
      - image: "cimg/base:stable"
    steps:
      # install node and checkout code
      - node/install
      - checkout
      # Use root level package.json to install dependencies in the frontend app
      - run:
          name: Install Front-End Dependencies
          command: |
            npm run frontend:install
      # TODO: Install dependencies in the the backend API
      - run:
          name: Install Back-End/API Dependencies
          command: |
            npm run api:install
      #- run:
      #    name: Test Front-End
      #    command: |
      #      npm run frontend:test
      # TODO: Build the frontend app
      - run:
          name: Build Front-End
          command: |
            npm run frontend:build
      # TODO: Build the backend API
      - run:
          name: Build Back-End/API
          command: |
            npm run api:build
  # deploy step will run only after manual approval
  deploy:
    docker:
      - image: "cimg/base:stable"
      # more setup needed for aws, node, elastic beanstalk
    steps:
      - node/install
      - aws-cli/setup
      - eb/setup
      - checkout
      # TODO: Install, build, deploy frontend app
      - run:
          name: Front-End deploy
          command: |
            npm run frontend:deploy
      #- run:
      #    name: Setting Back-End/API env
      #    command: |
      #      npm run api:setenv
      # TODO: Install, build, deploy backend app
      - run:
          name: Back-End/API deploy
          command: |
            npm run api:deploy
#workflows are instructions about the order of the jobs
workflows:
  udagram:
    jobs:
      - build
      - hold:
          filters:
            branches:
              only:
                - master
          type: approval
          requires:
            - build
      - deploy:
          requires:
            - hold
            